// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/factory/IPlayListMovie.go

// Package mock_factory is a generated GoMock package.
package mock_factory

import (
	model "MyPIPE/domain/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIPlayListMovie is a mock of IPlayListMovie interface
type MockIPlayListMovie struct {
	ctrl     *gomock.Controller
	recorder *MockIPlayListMovieMockRecorder
}

// MockIPlayListMovieMockRecorder is the mock recorder for MockIPlayListMovie
type MockIPlayListMovieMockRecorder struct {
	mock *MockIPlayListMovie
}

// NewMockIPlayListMovie creates a new mock instance
func NewMockIPlayListMovie(ctrl *gomock.Controller) *MockIPlayListMovie {
	mock := &MockIPlayListMovie{ctrl: ctrl}
	mock.recorder = &MockIPlayListMovieMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIPlayListMovie) EXPECT() *MockIPlayListMovieMockRecorder {
	return m.recorder
}

// CreatePlayListMovie mocks base method
func (m *MockIPlayListMovie) CreatePlayListMovie(playListId model.PlayListID, movieId model.MovieID) (*model.PlayListMovie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePlayListMovie", playListId, movieId)
	ret0, _ := ret[0].(*model.PlayListMovie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreatePlayListMovie indicates an expected call of CreatePlayListMovie
func (mr *MockIPlayListMovieMockRecorder) CreatePlayListMovie(playListId, movieId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePlayListMovie", reflect.TypeOf((*MockIPlayListMovie)(nil).CreatePlayListMovie), playListId, movieId)
}
