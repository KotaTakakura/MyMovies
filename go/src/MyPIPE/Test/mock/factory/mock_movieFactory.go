// Code generated by MockGen. DO NOT EDIT.
// Source: domain/factory/IMovieModel.go

// Package mock_factory is a generated GoMock package.
package mock_factory

import (
	model "MyPIPE/domain/model"
	gomock "github.com/golang/mock/gomock"
	multipart "mime/multipart"
	reflect "reflect"
)

// MockIMovieModelFactory is a mock of IMovieModelFactory interface
type MockIMovieModelFactory struct {
	ctrl     *gomock.Controller
	recorder *MockIMovieModelFactoryMockRecorder
}

// MockIMovieModelFactoryMockRecorder is the mock recorder for MockIMovieModelFactory
type MockIMovieModelFactoryMockRecorder struct {
	mock *MockIMovieModelFactory
}

// NewMockIMovieModelFactory creates a new mock instance
func NewMockIMovieModelFactory(ctrl *gomock.Controller) *MockIMovieModelFactory {
	mock := &MockIMovieModelFactory{ctrl: ctrl}
	mock.recorder = &MockIMovieModelFactoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIMovieModelFactory) EXPECT() *MockIMovieModelFactoryMockRecorder {
	return m.recorder
}

// CreateMovieModel mocks base method
func (m *MockIMovieModelFactory) CreateMovieModel(uploaderID model.UserID, displayName model.MovieDisplayName, fileHeader multipart.FileHeader) (*model.Movie, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMovieModel", uploaderID, displayName, fileHeader)
	ret0, _ := ret[0].(*model.Movie)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMovieModel indicates an expected call of CreateMovieModel
func (mr *MockIMovieModelFactoryMockRecorder) CreateMovieModel(uploaderID, displayName, fileHeader interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMovieModel", reflect.TypeOf((*MockIMovieModelFactory)(nil).CreateMovieModel), uploaderID, displayName, fileHeader)
}
