// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/ChangeUserProfileImage.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	usecase "MyPIPE/usecase"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIChangeUserProfilieImage is a mock of IChangeUserProfilieImage interface
type MockIChangeUserProfilieImage struct {
	ctrl     *gomock.Controller
	recorder *MockIChangeUserProfilieImageMockRecorder
}

// MockIChangeUserProfilieImageMockRecorder is the mock recorder for MockIChangeUserProfilieImage
type MockIChangeUserProfilieImageMockRecorder struct {
	mock *MockIChangeUserProfilieImage
}

// NewMockIChangeUserProfilieImage creates a new mock instance
func NewMockIChangeUserProfilieImage(ctrl *gomock.Controller) *MockIChangeUserProfilieImage {
	mock := &MockIChangeUserProfilieImage{ctrl: ctrl}
	mock.recorder = &MockIChangeUserProfilieImageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIChangeUserProfilieImage) EXPECT() *MockIChangeUserProfilieImageMockRecorder {
	return m.recorder
}

// ChangeUserProfileImage mocks base method
func (m *MockIChangeUserProfilieImage) ChangeUserProfileImage(changeUserProfileImageDTO *usecase.ChangeUserProfileImageDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeUserProfileImage", changeUserProfileImageDTO)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeUserProfileImage indicates an expected call of ChangeUserProfileImage
func (mr *MockIChangeUserProfilieImageMockRecorder) ChangeUserProfileImage(changeUserProfileImageDTO interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeUserProfileImage", reflect.TypeOf((*MockIChangeUserProfilieImage)(nil).ChangeUserProfileImage), changeUserProfileImageDTO)
}
