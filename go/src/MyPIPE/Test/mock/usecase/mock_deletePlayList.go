// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/DeletePlayList.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	usecase "MyPIPE/usecase"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDeletePlayList is a mock of IDeletePlayList interface
type MockIDeletePlayList struct {
	ctrl     *gomock.Controller
	recorder *MockIDeletePlayListMockRecorder
}

// MockIDeletePlayListMockRecorder is the mock recorder for MockIDeletePlayList
type MockIDeletePlayListMockRecorder struct {
	mock *MockIDeletePlayList
}

// NewMockIDeletePlayList creates a new mock instance
func NewMockIDeletePlayList(ctrl *gomock.Controller) *MockIDeletePlayList {
	mock := &MockIDeletePlayList{ctrl: ctrl}
	mock.recorder = &MockIDeletePlayListMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDeletePlayList) EXPECT() *MockIDeletePlayListMockRecorder {
	return m.recorder
}

// Delete mocks base method
func (m *MockIDeletePlayList) Delete(deletePlayListDTO *usecase.DeletePlayListDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", deletePlayListDTO)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete
func (mr *MockIDeletePlayListMockRecorder) Delete(deletePlayListDTO interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockIDeletePlayList)(nil).Delete), deletePlayListDTO)
}
