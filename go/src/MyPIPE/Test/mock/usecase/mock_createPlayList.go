// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/CreatePlayList.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	usecase "MyPIPE/usecase"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockICreatePlayList is a mock of ICreatePlayList interface
type MockICreatePlayList struct {
	ctrl     *gomock.Controller
	recorder *MockICreatePlayListMockRecorder
}

// MockICreatePlayListMockRecorder is the mock recorder for MockICreatePlayList
type MockICreatePlayListMockRecorder struct {
	mock *MockICreatePlayList
}

// NewMockICreatePlayList creates a new mock instance
func NewMockICreatePlayList(ctrl *gomock.Controller) *MockICreatePlayList {
	mock := &MockICreatePlayList{ctrl: ctrl}
	mock.recorder = &MockICreatePlayListMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockICreatePlayList) EXPECT() *MockICreatePlayListMockRecorder {
	return m.recorder
}

// CreatePlayList mocks base method
func (m *MockICreatePlayList) CreatePlayList(createPlayList usecase.CreatePlayListDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreatePlayList", createPlayList)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreatePlayList indicates an expected call of CreatePlayList
func (mr *MockICreatePlayListMockRecorder) CreatePlayList(createPlayList interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreatePlayList", reflect.TypeOf((*MockICreatePlayList)(nil).CreatePlayList), createPlayList)
}
