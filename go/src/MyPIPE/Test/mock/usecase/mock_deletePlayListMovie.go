// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/DeletePlayListMovie.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	usecase "MyPIPE/usecase"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIDeletePlayListMovie is a mock of IDeletePlayListMovie interface
type MockIDeletePlayListMovie struct {
	ctrl     *gomock.Controller
	recorder *MockIDeletePlayListMovieMockRecorder
}

// MockIDeletePlayListMovieMockRecorder is the mock recorder for MockIDeletePlayListMovie
type MockIDeletePlayListMovieMockRecorder struct {
	mock *MockIDeletePlayListMovie
}

// NewMockIDeletePlayListMovie creates a new mock instance
func NewMockIDeletePlayListMovie(ctrl *gomock.Controller) *MockIDeletePlayListMovie {
	mock := &MockIDeletePlayListMovie{ctrl: ctrl}
	mock.recorder = &MockIDeletePlayListMovieMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIDeletePlayListMovie) EXPECT() *MockIDeletePlayListMovieMockRecorder {
	return m.recorder
}

// DeletePlayListItem mocks base method
func (m *MockIDeletePlayListMovie) DeletePlayListItem(playListItemDeleteJson *usecase.DeletePlayListMovieDTO) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeletePlayListItem", playListItemDeleteJson)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeletePlayListItem indicates an expected call of DeletePlayListItem
func (mr *MockIDeletePlayListMovieMockRecorder) DeletePlayListItem(playListItemDeleteJson interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeletePlayListItem", reflect.TypeOf((*MockIDeletePlayListMovie)(nil).DeletePlayListItem), playListItemDeleteJson)
}
