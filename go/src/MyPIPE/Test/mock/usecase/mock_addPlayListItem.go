// Code generated by MockGen. DO NOT EDIT.
// Source: ./usecase/AddPlayListItem.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	usecase "MyPIPE/usecase"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIAddPlayListItem is a mock of IAddPlayListItem interface
type MockIAddPlayListItem struct {
	ctrl     *gomock.Controller
	recorder *MockIAddPlayListItemMockRecorder
}

// MockIAddPlayListItemMockRecorder is the mock recorder for MockIAddPlayListItem
type MockIAddPlayListItemMockRecorder struct {
	mock *MockIAddPlayListItem
}

// NewMockIAddPlayListItem creates a new mock instance
func NewMockIAddPlayListItem(ctrl *gomock.Controller) *MockIAddPlayListItem {
	mock := &MockIAddPlayListItem{ctrl: ctrl}
	mock.recorder = &MockIAddPlayListItemMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIAddPlayListItem) EXPECT() *MockIAddPlayListItemMockRecorder {
	return m.recorder
}

// AddPlayListItem mocks base method
func (m *MockIAddPlayListItem) AddPlayListItem(playListItemAddJson *usecase.AddPlayListItemAddJson) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddPlayListItem", playListItemAddJson)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddPlayListItem indicates an expected call of AddPlayListItem
func (mr *MockIAddPlayListItemMockRecorder) AddPlayListItem(playListItemAddJson interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddPlayListItem", reflect.TypeOf((*MockIAddPlayListItem)(nil).AddPlayListItem), playListItemAddJson)
}
